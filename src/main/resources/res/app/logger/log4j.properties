#if loaded by LogConfig, then the parent is; 
logs.home=./log

#log4j will watch this file, if change, reload config;
#if config, then the ${findAndSubst props}  will invalid;
#log4j.refresh.interval=20

#whether show log4j self's log
log4j.debug=false

#log4j INHERIT reset ;
log4j.reset=true

#root log level: OFF,FATAL,ERROR,WARN,INFO,DEBUG,TRACE,ALL
log4j.threshold=ALL

### direct log messages to common ###
log4j.appender.common=org.apache.log4j.ConsoleAppender
log4j.appender.common.Target=System.out
log4j.appender.common.layout=org.apache.log4j.PatternLayout
log4j.appender.common.layout.ConversionPattern=%d{HH:mm:ss.SSS} %5p %c:%L - %m%n

# file is set to be a RollingFileAppender. 
log4j.appender.root=org.apache.log4j.RollingFileAppender
log4j.appender.root.File=${logs.home}/log4root.log
log4j.appender.root.MaxFileSize=10MB
log4j.appender.root.MaxBackupIndex=4
log4j.appender.root.layout=org.apache.log4j.PatternLayout
log4j.appender.root.layout.ConversionPattern=%d %-5p %c:%L - %m%n

### direct messages to file hibernate.log ###
log4j.appender.onfile=org.apache.log4j.RollingFileAppender 
log4j.appender.onfile.File=${logs.home}/log4onfile.log
log4j.appender.onfile.MaxFileSize=10MB 
log4j.appender.onfile.MaxBackupIndex=5 
log4j.appender.onfile.layout=org.apache.log4j.PatternLayout 
log4j.appender.onfile.layout.ConversionPattern=%d{yyyyMMdd HH:mm:ss.SSS} %5p %c:%L - %m%n

### database messages to file ###
log4j.appender.dbmsql=org.apache.log4j.RollingFileAppender 
log4j.appender.dbmsql.File=${logs.home}/log4db.log
log4j.appender.dbmsql.MaxFileSize=10MB 
log4j.appender.dbmsql.MaxBackupIndex=5 
log4j.appender.dbmsql.layout=org.apache.log4j.PatternLayout 
log4j.appender.dbmsql.layout.ConversionPattern=%d{yyyyMMdd HH:mm:ss.SSS} %5p %c:%L - %m%n

### linglong messages to file ###
log4j.appender.module=org.apache.log4j.RollingFileAppender 
log4j.appender.module.File=${logs.home}/log4module.log
log4j.appender.module.MaxFileSize=10MB
log4j.appender.module.MaxBackupIndex=5 
log4j.appender.module.layout=org.apache.log4j.PatternLayout 
log4j.appender.module.layout.ConversionPattern=%d{yyyyMMdd HH:mm:ss.SSS} %5p %c:%L - %m%n

#Setting the root logger level and append to which appenders ;
#the first token should be "INHERIT"=debug or a Level;
log4j.rootLogger=INFO, common, root

log4j.category.jsp_servlet=WARN
log4j.additivity.jsp_servlet=false

log4j.category.com.hoss=DEBUG, module 
log4j.additivity.com.hoss=false

#log4j.logger.org.quartz=error
log4j.logger.org.hibernate=info dbmsql

### log HQL query parser activity
#log4j.logger.org.hibernate.hql.ast.AST=debug

### log just the SQL
#log4j.logger.org.hibernate.SQL=debug

### log JDBC bind parameters ###
log4j.logger.org.hibernate.type=info dbmsql
#log4j.logger.org.hibernate.type=debug

### log schema export/update ###
#log4j.logger.org.hibernate.tool.hbm2ddl=debug

### log HQL parse trees
#log4j.logger.org.hibernate.hql=debug onfile

### log cache activity ###
log4j.logger.org.hibernate.cache=debug onfile

### log transaction activity
#log4j.logger.org.hibernate.transaction=debug

### log JDBC resource acquisition
#log4j.logger.org.hibernate.jdbc=debug

### enable the following line if you want to track down connection ###
### leakages when using DriverManagerConnectionProvider ###
#log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=onfile
